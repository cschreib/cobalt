{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"act",
				"actor_id_t"
			],
			[
				"en",
				"enable_if	enable_if"
			],
			[
				"make",
				"make_image"
			],
			[
				"ID",
				"ID_STRUCT"
			],
			[
				"cons",
				"constexpr"
			],
			[
				"in",
				"in_packet_t"
			],
			[
				"p",
				"processed"
			],
			[
				"ser",
				"server_actor_id"
			],
			[
				"conn",
				"connection_failed"
			],
			[
				"conne",
				"connection_denied"
			],
			[
				"sel",
				"self_actor_id"
			],
			[
				"send",
				"send_message"
			],
			[
				"to",
				"too_many_clients"
			],
			[
				"Messag",
				"MessageType"
			],
			[
				"crea",
				"create_message_"
			],
			[
				"MESS",
				"MESSAGE_DEFINE"
			],
			[
				"nm",
				"namespace"
			],
			[
				"t",
				"type_list"
			],
			[
				"mess",
				"message_watch_t"
			],
			[
				"netc",
				"netcom_impl"
			],
			[
				"mem",
				"mem_var_comp_"
			],
			[
				"type_",
				"type_holder"
			],
			[
				"sor",
				"sorted_ptr_vector_t"
			],
			[
				"request",
				"request_selector_t"
			],
			[
				"func",
				"function_arguments_t"
			],
			[
				"strin",
				"stringify"
			],
			[
				"hel",
				"held_packets_"
			],
			[
				"out",
				"out_packet_t"
			],
			[
				"reque",
				"request_pool_t"
			],
			[
				"requ",
				"request_pool_t"
			],
			[
				"auto",
				"auto_cancel_"
			],
			[
				"watch",
				"watch_keeper_t"
			],
			[
				"wat",
				"watch_keeper_t"
			],
			[
				"selec",
				"selector_base_t"
			],
			[
				"unhandd",
				"unhandled_request"
			],
			[
				"pack",
				"packet_type"
			],
			[
				"un",
				"unhandled_func_"
			],
			[
				"Requ",
				"RequestType"
			],
			[
				"sele",
				"selector_base_t"
			],
			[
				"request_wa",
				"request_watch_t"
			],
			[
				"netcom",
				"netcom_impl"
			],
			[
				"message",
				"message_watches_"
			],
			[
				"an",
				"answered_"
			],
			[
				"mes",
				"message_watches_"
			],
			[
				"req",
				"request_id_t"
			],
			[
				"messa",
				"message_watches_"
			],
			[
				"tye",
				"type_list"
			],
			[
				"type",
				"type_list"
			],
			[
				"cancel",
				"cancel_request_"
			],
			[
				"process",
				"process_message_"
			],
			[
				"reques",
				"requests_"
			],
			[
				"rec",
				"receive_func"
			],
			[
				"a",
				"available_ids_"
			],
			[
				"flx_m",
				"flx_med_th"
			],
			[
				"flx_",
				"flx_mean_th"
			],
			[
				"is_",
				"is_any_of"
			],
			[
				"st",
				"struct	struct"
			],
			[
				"con",
				"container"
			],
			[
				"stati",
				"static_vec"
			],
			[
				"fiel",
				"field_area"
			],
			[
				"pars",
				"parse_line_"
			],
			[
				"find",
				"find_first_of"
			],
			[
				"ch",
				"char_height"
			],
			[
				"e",
				"enum	Enumeration"
			],
			[
				"b",
				"beginend	$1.begin(), $1.end()"
			],
			[
				"inc",
				"inc	#include \"…\""
			],
			[
				"ma",
				"main	main()"
			],
			[
				"fo",
				"for	For Loop"
			],
			[
				"for",
				"forv	Vector For Loop"
			],
			[
				"vo",
				"vector	std::vector"
			]
		]
	},
	"buffers":
	[
		{
			"file": "server-cli/main.cpp",
			"settings":
			{
				"buffer_size": 1807,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 2088,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/server_netcom.cpp",
			"settings":
			{
				"buffer_size": 7222,
				"line_ending": "Unix"
			}
		},
		{
			"file": "server/include/server_netcom.hpp",
			"settings":
			{
				"buffer_size": 2436,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client-cli/main.cpp",
			"settings":
			{
				"buffer_size": 2483,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/client_netcom.cpp",
			"settings":
			{
				"buffer_size": 4958,
				"line_ending": "Unix"
			}
		},
		{
			"file": "client/include/client_netcom.hpp",
			"settings":
			{
				"buffer_size": 2458,
				"line_ending": "Unix"
			}
		},
		{
			"file": "common/include/netcom_base.hpp",
			"settings":
			{
				"buffer_size": 42878,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 117.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"gdb",
				"SublimeGDB: Stop Debugging"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"syn c++",
				"Set Syntax: Objective-C++"
			],
			[
				"Snippet: ",
				"Snippet: struct"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 407.0,
		"history":
		[
			"import urllib.request, urllib.error, urllib.parse,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; install_opener(build_opener(ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib3,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib3.install_opener(urllib3.build_opener(urllib3.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib3.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')",
			"import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/cschreib/programming/cobalt2/README",
		"/home/cschreib/programming/cobalt/client/include/client_netcom.hpp",
		"/home/cschreib/programming/cobalt/client/src/client_netcom.cpp",
		"/home/cschreib/programming/cobalt2/common/include/time.hpp",
		"/home/cschreib/programming/phypp/include/string.hpp",
		"/home/cschreib/programming/cobalt2/common/time.cpp",
		"/home/cschreib/programming/cobalt2/common/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/common/filesystem_win32.cpp",
		"/home/cschreib/programming/cobalt2/common/filesystem_posix.cpp",
		"/home/cschreib/programming/cobalt2/common/include/string.hpp",
		"/home/cschreib/programming/phypp/include/time.hpp",
		"/home/cschreib/programming/cobalt2/common/string.cpp",
		"/home/cschreib/programming/cobalt2/common/include/print.hpp",
		"/home/cschreib/programming/phypp/include/print.hpp",
		"/home/cschreib/games/ice3/DefaultConfig.lua",
		"/home/cschreib/documents/beamer/1311_sap/beamer.tex",
		"/home/cschreib/documents/beamer/1311_sap/ref_beamer.tex",
		"/home/cschreib/list.reg",
		"/home/cschreib/h_goods_sz_r2.0z_cat.cat",
		"/home/cschreib/h_goods_sz_r2.0z_cat.txt",
		"/home/cschreib/programming/ice32/ice3.cbp",
		"/media/cschreib/Données/Programmation/Sources/ice32/ice3.cbp",
		"/media/cschreib/Données/Programmation/Sources/ice32/bin/default_config.lua",
		"/media/cschreib/Données/Programmation/Sources/ice32/include/worker_thread_fwd.hpp",
		"/media/cschreib/Données/Programmation/Sources/ice32/src/world_glues.cpp",
		"/media/cschreib/Données/Programmation/Sources/ice32/src/perlin.cpp",
		"/media/cschreib/Données/Programmation/Sources/ice32/src/threading_policies.cpp",
		"/home/cschreib/games/ice3/iCE3.sh",
		"/home/cschreib/.cache/.fr-f5GeO2/do.txt",
		"/home/cschreib/programming/phypp/code/pixfit/make_sedlib.cpp",
		"/home/cschreib/programming/phypp/code/pixfit/make_cutouts.cpp",
		"/home/cschreib/programming/phypp/code/pixfit/pixfit.cpp",
		"/home/cschreib/desktop/piscines",
		"/home/cschreib/programming/cobalt2/common/netcom_base.cpp",
		"/home/cschreib/programming/phypp/include/astro.hpp",
		"/home/cschreib/programming/phypp/include/plot.hpp",
		"/home/cschreib/programming/cobalt2/common/include/lock_free_queue.hpp",
		"/usr/share/ati/fglrx-install.log",
		"/home/cschreib/test.cpp",
		"/home/cschreib/packet.h",
		"/home/cschreib/hal.txt",
		"/home/cschreib/DualShock3.fdi",
		"/home/cschreib/drawing.svg",
		"/home/cschreib/programming/phypp/test/out/test_plot.eps",
		"/home/cschreib/drawing.pov",
		"/home/cschreib/downloads/Star.Trek.2009.DvDRip-FxM/Star.Trek.2009.DvDRip-FxM.srt",
		"/home/cschreib/programming/phypp/include/image.hpp",
		"/home/cschreib/.config/sublime-text-3/Packages/C++/phypp.sublime-snippet",
		"/home/cschreib/programming/wineasio/README",
		"/home/cschreib/programming/wineasio/wineasio.dll.spec",
		"/home/cschreib/programming/wineasio/Makefile",
		"/home/cschreib/games/jeu-00099-FutureWarsCD-PCDOS/Lisez-Moi.txt",
		"/home/cschreib/.bashrc",
		"/media/cschreib/PENDRIVE/How.I.Met.Your.Mother.S09E02.Coming.Back.720p.WEB-DL.DD5.1.H.264-CtrlHD.srt",
		"/home/cschreib/programming/cobalt2/common/include/filesystem.hpp",
		"/home/cschreib/programming/cobalt2/common/filesystem_common.cpp",
		"/home/cschreib/programming/cobalt2/tools/crc32_collide_test/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/tools/crc32_collide_test/main.cpp",
		"/home/cschreib/programming/cobalt2/server/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/server-cli/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/client-cli/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/client/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/common/include/crc32.hpp",
		"/home/cschreib/programming/cobalt2/common/crc32.cpp",
		"/home/cschreib/programming/cobalt2/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/tools/bin/crc32-collide-test",
		"/home/cschreib/programming/cobalt2/build/Testing/Temporary/LastTest.log",
		"/home/cschreib/programming/cobalt2/tools/crc32_collide_test.cpp",
		"/home/cschreib/programming/lxgui/utils/src/utils_filesystem.cpp",
		"/home/cschreib/programming/cobalt2/common/filesystem_win.cpp",
		"/home/cschreib/programming/cobalt2/common/include/variadic.hpp",
		"/home/cschreib/programming/cobalt2/common/include/vector2.hpp",
		"/home/cschreib/programming/cobalt2/common/include/network_requests.hpp",
		"/home/cschreib/programming/cobalt2/common/include/network_messages.hpp",
		"/home/cschreib/programming/SFML-2.0/include/SFML/Network/TcpSocket.hpp",
		"/home/cschreib/programming/SFML-2.0/src/SFML/Network/TcpSocket.cpp",
		"/home/cschreib/documents/mconv.txt",
		"/home/cschreib/documents/mconv_sms.txt",
		"/home/cschreib/programming/cobalt2/server/main.cpp",
		"/home/cschreib/programming/cobalt2/common/include/std_addon.hpp",
		"/home/cschreib/programming/cobalt/server/src/server_netcom.cpp",
		"/home/cschreib/programming/cobalt/server/src/main.cpp",
		"/home/cschreib/programming/cobalt2/CMakeList.txt",
		"/home/cschreib/programming/cobalt/server/include/server_netcom.hpp",
		"/home/cschreib/programming/cobalt2/server/include/server_netcom.hpp",
		"/home/cschreib/programming/cobalt2/server/server_netcom.cpp",
		"/home/cschreib/programming/cobalt2/common/network_messages.cpp",
		"/home/cschreib/programming/cobalt2/server/build/Makefile",
		"/home/cschreib/programming/bhj/main.cpp",
		"/home/cschreib/programming/epson-inkjet-printer-escpr-1.3.0/README",
		"/home/cschreib/programming/cb_kw2.txt",
		"/home/cschreib/programming/epson-inkjet-printer-escpr-1.3.0/INSTALL",
		"/home/cschreib/programming/lxgui/CMakeLists.txt",
		"/home/cschreib/programming/lxgui/gui/test/CMakeLists.txt",
		"/home/cschreib/programming/cobalt2/cmake/Modules/FindPkgMacros.cmake",
		"/home/cschreib/programming/cobalt2/common/include/netcom_base.hpp",
		"/home/cschreib/programming/cobalt2/common/include/netcom.hpp",
		"/home/cschreib/programming/cobalt2/common/netcom.cpp",
		"/home/cschreib/programming/cobalt2/common/include/space.hpp",
		"/home/cschreib/programming/cobalt2/common/include/string_tree.hpp",
		"/home/cschreib/.bin/use_gcc",
		"/home/cschreib/.bin/use_clang",
		"/home/cschreib/.bin/use_gcc-4.8",
		"/home/cschreib/programming/cobalt2/common/space.cpp",
		"/home/cschreib/programming/cobalt2/common/include/member_comparator.hpp",
		"/home/cschreib/Mylène Boutin - Messages.html",
		"/home/cschreib/programming/cobalt2/common/include/sorted_vector.hpp",
		"/home/cschreib/programming/cobalt2/common/include/axis_aligned_box2.hpp",
		"/home/cschreib/programming/cobalt2/common/include/stringify.hpp",
		"/home/cschreib/.config/sublime-text-3/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/cschreib/.config/sublime-text-3/Packages/Terminal/Terminal.sublime-settings",
		"/home/cschreib/.config/sublime-text-3/Packages/User/Terminal.sublime-settings",
		"/home/cschreib/programming/cobalt2/common/cmake_install.cmake",
		"/home/cschreib/programming/cobalt2/common/include/config.hpp",
		"/home/cschreib/programming/cobalt2/common/config.cpp",
		"/home/cschreib/programming/cobalt/common/src/network_packets.cpp",
		"/home/cschreib/programming/cobalt/client/src/client_game_config.cpp",
		"/home/cschreib/programming/cobalt/common/include/variadic.hpp",
		"/home/cschreib/programming/cobalt/common/include/sorted_vector.hpp",
		"/home/cschreib/programming/cobalt/bak/client_server.hpp",
		"/home/cschreib/programming/cobalt/common/include/std_addon.hpp",
		"/home/cschreib/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/cschreib/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
		"/home/cschreib/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/cschreib/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/cschreib/programming/cobalt/common/include/sorted_list.hpp",
		"/home/cschreib/programming/cobalt/common/include/ptr_iterator_base.hpp",
		"/home/cschreib/programming/cobalt/bin/admin.log"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"netcom_request_t",
			"request_t",
			"strn",
			"->",
			"*old",
			"*trial",
			"->",
			":",
			"Kids",
			"netcom_request_t",
			"ts",
			"uint_t",
			"lDirs",
			"cpath",
			"sTemp",
			"sPath",
			"(const std::string&",
			"const std::string&",
			"const std::string& ts",
			"const std::string&",
			"impl::",
			"vec1s",
			"test",
			"NETWORK_MESSAGE",
			"MESSAGE",
			"struct\\s(\\w+) : public impl::base<__LINE__>",
			"in_packet_t",
			"MESSAGES",
			"processed",
			"void",
			"server",
			"socket_",
			"Ã´",
			"<out>",
			"<in >",
			"skillet",
			"Ã€",
			"Â ",
			"2013-",
			"â‚¬",
			"Ã‡",
			"Ã§",
			"Ã»",
			"Ã¢",
			"Ã¹",
			"Ã ",
			"Ãª",
			"Ã©",
			"Ã¨",
			"SERVER",
			"using types = type_list<__VA_ARGS__>;",
			"O",
			"Type::id",
			"::id",
			"client_id_t",
			"impl",
			"netcom",
			"netcom*",
			"netcom&",
			"netcom",
			"*t2.",
			"*t1.",
			"mem_var_owner",
			"get_cell_id",
			"-W",
			"chant",
			"vector2d",
			"that",
			"request_keeper_t",
			"invalid_actor",
			"netcom_impl::",
			"nothrow",
			"SET",
			"${SRC_ROOT}",
			"vector2_t",
			"watch_id_t",
			"request",
			"serialize_",
			"netcom::",
			"request_t",
			"out_packet_t",
			"p <<",
			"p << ",
			"p <<",
			"p << RequestType",
			"p << ",
			"p << RequestType",
			"p << ",
			"unhandled",
			"p >>",
			"p",
			"sf::Packet",
			"selector_base_t",
			"message_watch_t",
			"request_watch_t",
			"request_t",
			"request_pool_t",
			"w",
			"id_",
			"TODO",
			"wether",
			"packet_type",
			"send_answer_",
			"TODO",
			"RequestType",
			"fail_types",
			"return_types",
			"insert",
			"std::size_t",
			"mwatch",
			"message",
			"client",
			"server",
			"netcom_impl::request_id_t",
			"server",
			"variadic_storage",
			"command_id_t",
			"interpolate",
			"vec1i",
			"'",
			"date_str",
			"transform_abs_",
			"phyu",
			"ClassType_tmpl",
			"default_font",
			"font_size_",
			"pv.",
			"views_.back()"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"\\n",
			"MESSAGE(\\1)",
			"ô",
			"À",
			"\n",
			"€",
			"Ç",
			"ç",
			"û",
			"â",
			"ù",
			"à",
			"ê",
			"é",
			"è",
			"vec2d",
			"phypp",
			"%20",
			";\\n",
			"<string>keyword.operator.c</string>",
			"keyword.operator.c++",
			"urllib3"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "server-cli/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1807,
						"regions":
						{
						},
						"selection":
						[
							[
								339,
								339
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2088,
						"regions":
						{
						},
						"selection":
						[
							[
								1192,
								1192
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "server/server_netcom.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7222,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "server/include/server_netcom.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2436,
						"regions":
						{
						},
						"selection":
						[
							[
								2423,
								2423
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "client-cli/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2483,
						"regions":
						{
						},
						"selection":
						[
							[
								1196,
								1196
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "client/client_netcom.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4958,
						"regions":
						{
						},
						"selection":
						[
							[
								2289,
								2289
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "client/include/client_netcom.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2458,
						"regions":
						{
						},
						"selection":
						[
							[
								79,
								79
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "common/include/netcom_base.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42878,
						"regions":
						{
						},
						"selection":
						[
							[
								11253,
								11253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3964.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5039449501,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"project": "cobalt.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"str",
				"common/include/string.hpp"
			],
			[
				"tim",
				"common/include/time.hpp"
			],
			[
				"strin",
				"common/include/string.hpp"
			],
			[
				"file",
				"common/include/filesystem.hpp"
			],
			[
				"var",
				"common/include/variadic.hpp"
			],
			[
				"std",
				"common/include/std_addon.hpp"
			],
			[
				"net",
				"common/netcom_base.cpp"
			],
			[
				"netco",
				"common/netcom.cpp"
			],
			[
				"spac",
				"include/space.hpp"
			],
			[
				"spa",
				"space.cpp"
			],
			[
				"math",
				"include/math.hpp"
			],
			[
				"uni",
				"test/unit_test.cpp"
			],
			[
				"time",
				"include/time.hpp"
			],
			[
				"uin",
				"test/unit_test.cpp"
			],
			[
				"plot",
				"test/plot_test.cpp"
			],
			[
				"col",
				"include/color.hpp"
			],
			[
				"pl",
				"include/plot.hpp"
			],
			[
				"un",
				"test/unit_test.cpp"
			],
			[
				"mat",
				"math.hpp"
			],
			[
				"key",
				"keyword.hpp"
			],
			[
				"ve",
				"vec.hpp"
			],
			[
				"vec",
				"vec.hpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 132.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
